import { MD3LightTheme, MD3DarkTheme, configureFonts } from 'react-native-paper';
import { COLORS, DARK_COLORS, FONT_SIZES } from '../constants';

const fontConfig = {
  displayLarge: {
    fontSize: FONT_SIZES.xxxl,
    fontWeight: '400' as const,
    letterSpacing: 0,
    lineHeight: FONT_SIZES.xxxl * 1.2,
  },
  displayMedium: {
    fontSize: FONT_SIZES.xxl,
    fontWeight: '400' as const,
    letterSpacing: 0,
    lineHeight: FONT_SIZES.xxl * 1.2,
  },
  displaySmall: {
    fontSize: FONT_SIZES.xl,
    fontWeight: '400' as const,
    letterSpacing: 0,
    lineHeight: FONT_SIZES.xl * 1.2,
  },
  headlineLarge: {
    fontSize: FONT_SIZES.xxl,
    fontWeight: '400' as const,
    letterSpacing: 0,
    lineHeight: FONT_SIZES.xxl * 1.2,
  },
  headlineMedium: {
    fontSize: FONT_SIZES.xl,
    fontWeight: '400' as const,
    letterSpacing: 0,
    lineHeight: FONT_SIZES.xl * 1.2,
  },
  headlineSmall: {
    fontSize: FONT_SIZES.lg,
    fontWeight: '400' as const,
    letterSpacing: 0,
    lineHeight: FONT_SIZES.lg * 1.2,
  },
  titleLarge: {
    fontSize: FONT_SIZES.lg,
    fontWeight: '500' as const,
    letterSpacing: 0,
    lineHeight: FONT_SIZES.lg * 1.2,
  },
  titleMedium: {
    fontSize: FONT_SIZES.md,
    fontWeight: '500' as const,
    letterSpacing: 0.15,
    lineHeight: FONT_SIZES.md * 1.2,
  },
  titleSmall: {
    fontSize: FONT_SIZES.sm,
    fontWeight: '500' as const,
    letterSpacing: 0.1,
    lineHeight: FONT_SIZES.sm * 1.2,
  },
  bodyLarge: {
    fontSize: FONT_SIZES.md,
    fontWeight: '400' as const,
    letterSpacing: 0.5,
    lineHeight: FONT_SIZES.md * 1.5,
  },
  bodyMedium: {
    fontSize: FONT_SIZES.sm,
    fontWeight: '400' as const,
    letterSpacing: 0.25,
    lineHeight: FONT_SIZES.sm * 1.5,
  },
  bodySmall: {
    fontSize: FONT_SIZES.xs,
    fontWeight: '400' as const,
    letterSpacing: 0.4,
    lineHeight: FONT_SIZES.xs * 1.5,
  },
  labelLarge: {
    fontSize: FONT_SIZES.sm,
    fontWeight: '500' as const,
    letterSpacing: 0.1,
    lineHeight: FONT_SIZES.sm * 1.2,
  },
  labelMedium: {
    fontSize: FONT_SIZES.xs,
    fontWeight: '500' as const,
    letterSpacing: 0.5,
    lineHeight: FONT_SIZES.xs * 1.2,
  },
  labelSmall: {
    fontSize: 11,
    fontWeight: '500' as const,
    letterSpacing: 0.5,
    lineHeight: 16,
  },
};

export const lightTheme = {
  ...MD3LightTheme,
  colors: {
    ...MD3LightTheme.colors,
    primary: COLORS.primary,
    primaryContainer: COLORS.primaryLight,
    secondary: COLORS.secondary,
    secondaryContainer: COLORS.secondaryLight,
    tertiary: COLORS.info,
    tertiaryContainer: COLORS.info + '20',
    surface: COLORS.surface,
    surfaceVariant: COLORS.surface,
    surfaceDisabled: COLORS.disabled,
    background: COLORS.background,
    error: COLORS.error,
    errorContainer: COLORS.error + '20',
    onPrimary: COLORS.white,
    onPrimaryContainer: COLORS.primaryDark,
    onSecondary: COLORS.white,
    onSecondaryContainer: COLORS.secondaryDark,
    onTertiary: COLORS.white,
    onTertiaryContainer: COLORS.info,
    onSurface: COLORS.text,
    onSurfaceVariant: COLORS.textSecondary,
    onSurfaceDisabled: COLORS.disabled,
    onError: COLORS.white,
    onErrorContainer: COLORS.error,
    onBackground: COLORS.text,
    outline: COLORS.border,
    outlineVariant: COLORS.border,
    inverseSurface: COLORS.text,
    inverseOnSurface: COLORS.white,
    inversePrimary: COLORS.primaryLight,
    shadow: COLORS.black,
    scrim: COLORS.black,
  },
  fonts: configureFonts({ config: fontConfig }),
};

export const darkTheme = {
  ...MD3DarkTheme,
  colors: {
    ...MD3DarkTheme.colors,
    primary: DARK_COLORS.primary,
    primaryContainer: DARK_COLORS.primaryDark,
    secondary: DARK_COLORS.secondary,
    secondaryContainer: DARK_COLORS.secondaryDark,
    tertiary: DARK_COLORS.info,
    tertiaryContainer: DARK_COLORS.info + '20',
    surface: DARK_COLORS.surface,
    surfaceVariant: DARK_COLORS.surface,
    surfaceDisabled: DARK_COLORS.disabled,
    background: DARK_COLORS.background,
    error: DARK_COLORS.error,
    errorContainer: DARK_COLORS.error + '20',
    onPrimary: DARK_COLORS.black,
    onPrimaryContainer: DARK_COLORS.primaryLight,
    onSecondary: DARK_COLORS.black,
    onSecondaryContainer: DARK_COLORS.secondaryLight,
    onTertiary: DARK_COLORS.black,
    onTertiaryContainer: DARK_COLORS.info,
    onSurface: DARK_COLORS.text,
    onSurfaceVariant: DARK_COLORS.textSecondary,
    onSurfaceDisabled: DARK_COLORS.disabled,
    onError: DARK_COLORS.black,
    onErrorContainer: DARK_COLORS.error,
    onBackground: DARK_COLORS.text,
    outline: DARK_COLORS.border,
    outlineVariant: DARK_COLORS.border,
    inverseSurface: DARK_COLORS.text,
    inverseOnSurface: DARK_COLORS.background,
    inversePrimary: DARK_COLORS.primaryDark,
    shadow: DARK_COLORS.black,
    scrim: DARK_COLORS.black,
  },
  fonts: configureFonts({ config: fontConfig }),
};
version: '3.8'

services:
  websocket:
    build: .
    image: gaterlink-websocket:latest
    container_name: gaterlink-websocket
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_URL=redis://redis:6379
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - LOG_LEVEL=info
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - gaterlink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: gaterlink-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpass}
    restart: unless-stopped
    networks:
      - gaterlink-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: gaterlink-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - websocket
    restart: unless-stopped
    networks:
      - gaterlink-network

volumes:
  redis-data:
    driver: local

networks:
  gaterlink-network:
    driver: bridge

/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/rncamerakit_specs/EventEmitters.h>


namespace facebook::react {

void CKCameraEventEmitter::onOrientationChange(OnOrientationChange event) const {
  dispatchEvent("orientationChange", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "orientation", event.orientation);
    return payload;
  });
}


void CKCameraEventEmitter::onZoom(OnZoom event) const {
  dispatchEvent("zoom", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "zoom", event.zoom);
    return payload;
  });
}


void CKCameraEventEmitter::onError(OnError event) const {
  dispatchEvent("error", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "errorMessage", event.errorMessage);
    return payload;
  });
}


void CKCameraEventEmitter::onReadCode(OnReadCode event) const {
  dispatchEvent("readCode", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "codeStringValue", event.codeStringValue);
payload.setProperty(runtime, "codeFormat", event.codeFormat);
    return payload;
  });
}


void CKCameraEventEmitter::onCaptureButtonPressIn(OnCaptureButtonPressIn event) const {
  dispatchEvent("captureButtonPressIn", [](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    
    return payload;
  });
}


void CKCameraEventEmitter::onCaptureButtonPressOut(OnCaptureButtonPressOut event) const {
  dispatchEvent("captureButtonPressOut", [](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    
    return payload;
  });
}


void CKCameraEventEmitter::onPictureTaken(OnPictureTaken event) const {
  dispatchEvent("pictureTaken", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "uri", event.uri);
    return payload;
  });
}

} // namespace facebook::react
